name: Build

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build

    runs-on: ${{ matrix.build.runner }}
    strategy:
      fail-fast: false
      matrix:
        build:
        - runner: ubuntu-latest
          arch: x86_64
          target: x86_64-unknown-linux-gnu
        - runner: macos-latest
          arch: aarch
          target: aarch64-apple-darwin
        - runner: macos-latest
          arch: x86_64
          target: x86_64-apple-darwin

    steps:
    - name: Checkout ${{ github.repository }}
      uses: actions/checkout@v4
    - name: Get libffi version
      id: version
      run: echo "libffi=$(cat ./libffi-version)" >> $GITHUB_OUTPUT
    - name: Download libffi
      working-directory: source
      run: >
        gh release -R libffi/libffi
        download v${{ steps.version.outputs.libffi }}
        -p libffi-${{ steps.version.outputs.libffi }}.tar.gz
      env:
        GH_TOKEN: ${{ github.token }}
    - name: Extract tarball
      working-directory: source
      run: tar -xzf libffi-${{ steps.version.outputs.libffi }}.tar.gz
    - name: Set environmental variables
      run: echo ""
    - name: Configure
      working-directory: source/libffi-${{ steps.version.outputs.libffi }}
      run: >
        ./configure
        --prefix=${{ github.workspace }}/libffi
        --host=${{ matrix.build.target }}
        CC=clang
        CFLAGS="-target=${{ matrix.build.target }}"
        CXX=clang
        CXXFLAGS="-target=${{ matrix.build.target }}"
    - name: Build
      working-directory: source/libffi-${{ steps.version.outputs.libffi }}
      run: make -j$(nproc) install
    - name: Upload libffi artifact
      uses: actions/upload-artifact@v4
      with:
        name: libffi-${{ matrix.build.target }}
        path: ${{ github.workspace }}/libffi
        if-no-files-found: error
        retention-days: 1
